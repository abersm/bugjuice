library(devtools)
library(roxygen2)
library(usethis)
library(testthat)
paste_path(bugjuice)
usethis::proj_set("/Users/michaelabers/Desktop/bugjuice")
getwd()
s("%>%", path = paste_path("bugjuice"))
s("%>%", "/Users/michaelabers/Desktop/bugjuice")
s("|>", "/Users/michaelabers/Desktop/bugjuice")
devtools::document("bugjuice")
document("bugjuice")
devtools::document("bugjuice")
devtools::document(pkg = paste_path("bugjuice"))
devtools::document(pkg = paste_path("bugjuice"))
s("get_plot_limits")
o(plot_info)
s("abers", path = paste_path("bugjuice"))
paste_path()
s("/Users/", path = paste_path("bugjuice"))
o()
s("importFrom", path = paste_path("bugjuice"))
s("importFrom", path = paste_path("bugjuice"), open = TRUE)
paste_vertical(sort(c("rlang", "purrr", "dplyr", "ggplot2", "survival", "stats", "utils", "methods", "ggbeeswarm", "scales", "grid", "gtable", "xml2", "clipr", "grDevices", "graphics")))
s("::", path = paste_path("bugjuice"))
s("xml2::", path = paste_path("bugjuice"))
s("methods::", path = paste_path("bugjuice"))
s("importFrom methods", path = paste_path("bugjuice"))
s("importFrom graphics", path = paste_path("bugjuice"))
plot
rect
apropos("core")
col2rgb
col2hsl
rgb2hsl
hsl2rgb
s("importFrom grDevices", path = paste_path("bugjuice"))
s("@return ")
s("@return ", path = paste_path("bugjuice"))
str_alphanum
s("as_grob(")
o(plot_survival)
s("cowplot::", path = paste_path("bugjuice"))
s("plot_grid(")
s("plot_grid(", pkg = T)
s("plot_grid(", path = paste_path("bugjuice"))
o(plot_multi)
s("align_plots(", pkg = T)
s("align_plots(", path = paste_path("bugjuice"))
s("align_margin(", path = paste_path("bugjuice"))
s("expand_range(", path = paste_path("bugjuice"))
s("geom_label_npc(")
s("geom_label_npc(", path = paste_path("bugjuice"))
theme_clean
s("theme_clean(", path = paste_path("bugjuice"))
theme_void
s("theme_empty(", path = paste_path("bugjuice"))
s("theme_basic(", path = paste_path("bugjuice"))
s("as_grob(", path = paste_path("bugjuice"))
s("draw_grob(", path = paste_path("bugjuice"))
s
s("flowCore", path = paste_path("bugjuice"))
s("facs", path = paste_path("bugjuice"))
s("fcs", path = paste_path("bugjuice"))
s("shiny", path = paste_path("bugjuice"))
s("shiny", path = paste_path("bugjuice"))
s("microbenchmark", path = paste_path("bugjuice"))
s("brolgar", path = paste_path("bugjuice"))
s("bslib", path = paste_path("bugjuice"))
s("brolgar", path = paste_path("bugjuice"))
s("htmltools", path = paste_path("bugjuice"))
s("crayon", path = paste_path("bugjuice"))
s("cutpointr", path = paste_path("bugjuice"))
s("devtools", path = paste_path("bugjuice"))
s("styler", path = paste_path("bugjuice"))
s("tidyselect::", path = paste_path("bugjuice"))
s("sp::", path = paste_path("bugjuice"))
s("scattermore::", path = paste_path("bugjuice"))
s("roxygen2::", path = paste_path("bugjuice"))
s("readxl::", path = paste_path("bugjuice"))
s("pzfx::", path = paste_path("bugjuice"))
s("pheatmap::", path = paste_path("bugjuice"))
s("plotly::", path = paste_path("bugjuice"))
s("pdftools::", path = paste_path("bugjuice"))
s("openxlsx::", path = paste_path("bugjuice"))
s("ggfocus::", path = paste_path("bugjuice"))
s("ggdensity::", path = paste_path("bugjuice"))
s("ggrepel::", path = paste_path("bugjuice"))
s("magick::", path = paste_path("bugjuice"))
s("readxl::", path = paste_path("bugjuice"))
s("qpdf::", path = paste_path("bugjuice"))
s("ggforce::", path = paste_path("bugjuice"))
s("ggfocus::", path = paste_path("bugjuice"))
s("EBImage::", path = paste_path("bugjuice"))
s("magick::", path = paste_path("bugjuice"))
s("rvg::", path = paste_path("bugjuice"))
s("devtools::", path = paste_path("bugjuice"))
s("corrplot::", path = paste_path("bugjuice"))
s("annotables::", path = paste_path("bugjuice"))
s("codetools::", path = paste_path("bugjuice"))
s("rstudioapi::", path = paste_path("bugjuice"))
s("qpdf::", path = paste_path("bugjuice"))
s("pdftools::", path = paste_path("bugjuice"))
s("methods::", path = paste_path("bugjuice"))
s("htmltools::", path = paste_path("bugjuice"))
s("microbenchmark::", path = paste_path("bugjuice"))
s("clipr::", path = paste_path("bugjuice"))
s("tidyr::", path = paste_path("bugjuice"))
s("purrr::", path = paste_path("bugjuice"))
s("gtable::", path = paste_path("bugjuice"))
s("gtable::", path = paste_path("bugjuice"))
purrr::flatten
col2hex
s("graphics::")
s("graphics::", path = paste_path("bugjuice"))
s("ggbeeswarm::", path = paste_path("bugjuice"))
s("importFrom ggbeeswarm", path = paste_path("bugjuice"))
s("purrr::", path = paste_path("bugjuice"))
is_column
s("is_column(", path = paste_path("bugjuice"))
library(bugjuice)
usethis:::use_mit_license()
s("ggplotify", path = paste_path("bugjuice"))
s(":::", path = paste_path("bugjuice"))
s("scale_fill(", path = paste_path("bugjuice"))
s("scale_color(", path = paste_path("bugjuice"))
s("scale_fill_new(", path = paste_path("bugjuice"))
s(".add_cat_aes_vars(", path = paste_path("bugjuice"))
viewport_settings
s("viewport_settings(", path = paste_path("bugjuice"))
s(".phi", path = paste_path("bugjuice"))
s(".golden_ratio", path = paste_path("bugjuice"))
s("as_ggplot", path = paste_path("bugjuice"))
s("as_ggplot", path = paste_path("bugjuice"))
s("parse_safe", path = paste_path("bugjuice"))
s(".nrow_ncol_square_grid", path = paste_path("bugjuice"))
Args(auc_ci)
o(auc)
o(hr_ci)
s("odds_ratio <- ")
o(binary_classification)
s("q_value <- ")
o(p_values)
s("format_p_value(")
s("p_value_format(")
s("p_value_format", path = paste_path("bugjuice"))
s("format_p_value", path = paste_path("bugjuice"))
o(plot_survival)
o(plot_significance)
s("format_p_value", path = paste_path("bugjuice"))
s("p_value_format", path = paste_path("bugjuice"))
o(binary_classification)
s("can_be_numeric <- ", path = paste_path("bugjuice"))
s("str_can_be_numeric(", path = paste_path("bugjuice"))
s("escape_regex(", path = paste_path("bugjuice"))
str_date
s("str_date(", path = paste_path("bugjuice"))
s("str_extract_date(", path = paste_path("bugjuice"))
str_date("2020/4/3")
str_extract_date("2020/4/3")
o(color)
str_contains
o(names)
o(test_variance)
o(test_mean)
o(test_means)
Args(p_by_normality) %>% setdiff(Args(p_ttest))
s("rr_ci <- ", path = paste_path("bugjuice"))
.fn_get
abers:::.fn_get
s("Args(", path = paste_path("bugjuice"))
s("excel_number_to_date", path = paste_path("bugjuice"))
abers:::excel_number_to_date
s("get_dupes <- ", path = paste_path("bugjuice"))
ggplot_layout
f(ggplot_layout)
abers:::ggplot_layout
o(plot_info)
o(plot_extract)
coef
s("@ import", path = paste_path("bugjuice"))
s("@import", path = paste_path("bugjuice"))
s("@import ", path = paste_path("bugjuice"))
s("@importFrom stats", path = paste_path("bugjuice"))
o(N)
abers:::p_by_normality
p_prop_test
prop.test
chisq.test
prop.test
stats::prop.test
abers::vals_last
o(plot_scatter)
o(plot_volcano)
o(scale_axis_clean)
o(colors)
o(color)
par
rect
col
rowSums
xtfrm.default
s("data(", path = paste_path("bugjuice"))
s(" data(", path = paste_path("bugjuice"))
s(" par(", path = paste_path("bugjuice"))
s("par(", path = paste_path("bugjuice"))
s("graphics::par(", path = paste_path("bugjuice"))
Cs(.fn_get, .use_names, .x, Group1, Group2, Var1, Var2, Var3, bind_rows,
case_when, ci_1, ci_2, coef, col_1, color, color_var, coxph_model, data, df,
excel_number_to_date, fc_1_vs_2_mean, fc_1_vs_2_median, fc_2_vs_1_mean,
fc_2_vs_1_median, gaes, ggplot_layout, greater, group, id_var, is_genotype,
keep_last, label, label_var_reordered, line_color_var, location_fn, max_1,
max_2, mean_1, mean_2, median_1, median_2, method, min_1, min_2, n, n_1, n_2,
npg, nrows, or, or_lower, or_upper, p, p_adj, p_adj_label, p_chisq, p_fet,
p_val_table, palettes, par, perc_cases, prop_test, pvals, q1_1, q1_2, q3_1,
q3_2, s, sd_1, sd_2, se_1, se_2, surv, surv_lower, surv_upper, time, value,
view_plot_clr_blind, welch, x, x_label, x_numeric, xend, xmin, y, y_label,
y_pos, y_sig_bar, y_sig_label, ymax, ymin)
Cs(.fn_get, .use_names, .x, Group1, Group2, Var1, Var2, Var3, bind_rows,
case_when, ci_1, ci_2, coef, col_1, color, color_var, coxph_model, data, df,
excel_number_to_date, fc_1_vs_2_mean, fc_1_vs_2_median, fc_2_vs_1_mean,
fc_2_vs_1_median, gaes, ggplot_layout, greater, group, id_var, is_genotype,
keep_last, label, label_var_reordered, line_color_var, location_fn, max_1,
max_2, mean_1, mean_2, median_1, median_2, method, min_1, min_2, n, n_1, n_2,
npg, nrows, or, or_lower, or_upper, p, p_adj, p_adj_label, p_chisq, p_fet,
p_val_table, palettes, par, perc_cases, prop_test, pvals, q1_1, q1_2, q3_1,
q3_2, s, sd_1, sd_2, se_1, se_2, surv, surv_lower, surv_upper, time, value,
view_plot_clr_blind, welch, x, x_label, x_numeric, xend, xmin, y, y_label,
y_pos, y_sig_bar, y_sig_label, ymax, ymin) %>% paste_vertical()
p_chisq
s(".use_names", path = paste_path("bugjuice"))
s(".fn_get", path = paste_path("bugjuice"))
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::load_all(".")
library(bugjuice)
o(io_ppt)
o(strings)
s("str_extract_between", path = paste_path("bugjuice"))
o(test_means)
o(test_normality)
Args(p_anova) %>% Setdiff(Args(p_kruskal))
Args(p_anova) %>% Setdiff(Args(p_kruskal), .)
o(test_variance)
o(tidyverse_exports)
library(bugjuice)
devtools::document()
devtools::document()
library(bugjuice)
o(test_means)
Args(p_mann_whitney) %>% Setdiff(Args(p_ttest))
Args(p_tukey) %>% Setdiff(Args(p_ttest))
Args(p_tukey) %>% Setdiff(Args(p_anova))
devtools::document()
devtools::document()
library(bugjuice)
